eyetracker.hw.tobii.EyeTracker:
    # Indicates if the device should actually be loaded at experiment runtime.
    enable: True

    # The variable name of the device that will be used to access the ioHub Device class
    # during experiment run-time, via the devices.[name] attribute of the ioHub
    # connection or experiment runtime class.
    name: tracker

    # Should eye tracker events be saved to the ioHub DataStore file when the device
    # is recording data ?
    save_events: True

    # Should eye tracker events be sent to the Experiment process when the device
    # is recording data ?
    stream_events: True

    # How many eye events (including samples) should be saved in the ioHub event buffer before
    # old eye events start being replaced by new events. When the event buffer reaches
    # the maximum event length of the buffer defined here, older events will start to be dropped.
    event_buffer_length: 1024

    # The Tobii implementation of the common eye tracker interface supports the
    # BinocularEyeSampleEvent event type.
    monitor_event_types: [BinocularEyeSampleEvent,]

    # The model name of the Tobii device that you wish to connect to can be specified here,
    # and only Tobii systems matching that model name will be considered as possible candidates for connection.
    # If you only have one Tobii system connected to the computer, this field can just be left empty.
    model_name:

    # The serial number of the Tobii device that you wish to connect to can be specified here,
    # and only the Tobii system matching that serial number will be connected to, if found.
    # If you only have one Tobii system connected to the computer, this field can just be left empty,
    # in which case the first Tobii device found will be connected to.
    serial_number:

    calibration:
        # The Tobii ioHub Common Eye Tracker Interface currently supports
        # 3, 5, 9, and 13 point calibration modes.
        # THREE_POINTS, FIVE_POINTS, NINE_POINTS,THIRTEEN_POINTS
        #
        type: NINE_POINTS

        # color_type: rgb, rgb255, named, hex, etc. Leave blank to use window's color space.
        color_type:

        # unit_type: norm, pix, height, deg, etc. Leave blank to use window's unit type.
        unit_type:

        # Should the target positions be randomized?
        #
        randomize: True

        # auto_pace can be True or False. If True, the eye tracker will 
        # automatically progress from one calibration point to the next.
        # If False, a manual key or button press is needed to progress to
        # the next point.
        #
        auto_pace: True

        # target_duration is the number of sec that a calibration point should
        # be displayed before moving onto the next point.
        # Target size expansion / contraction optionally occurs during this time period as well.
        target_duration: 1.5

        # target_delay specifies the time between target position presentations.
        # Target position animation optionally occurs during this time period as well.
        target_delay: 0.75

        # **pacing_speed is deprecated. Please use 'target_delay' instead.**
        pacing_speed:

        # screen_background_color specifies the r,g,b background color to 
        # set the calibration, validation, etc, screens to. Each element of the color
        # should be a value between 0 and 255. 0 == black, 255 == white.
        #
        screen_background_color: [128,128,128]

        # text_color specifies the foreground color of any text used during calibration.
        # If empty, text_color is calculated automatically based on screen_background_color.
        text_color:

        # Target type defines what form of calibration graphic should be used
        # during calibration, validation, etc. modes.
        # Currently the Tobii implementation supports the following
        # target type: CIRCLE_TARGET. 
        # To do: Add support for other types, etc.
        #
        target_type: CIRCLE_TARGET
        
        # The associated target attribute properties can be supplied
        # for the given target_type. 
        target_attributes:
             # CIRCLE_TARGET is drawn using two PsychoPy
             # Circle Stim. The _outer_ circle is drawn first, and should be
             # be larger than the _inner_ circle, which is drawn on top of the
             # outer circle. The target_attributes starting with 'outer_' define
             # how the outer circle of the calibration targets should be drawn.
             # The target_attributes starting with 'inner_' define
             # how the inner circle of the calibration targets should be drawn. 
             #
             # outer_diameter: The size of the outer circle of the calibration target
             #
             outer_diameter: 35.0
             # outer_stroke_width: The thickness of the outer circle edge. 
             #
             outer_stroke_width: 2.0
             # outer_fill_color: color to use to fill the outer circle.
             #
             outer_fill_color: [128,128,128]
             # outer_line_color: color to used for the outer circle edge.
             #
             outer_line_color: [255,255,255]
             # inner_diameter: The size of the inner circle calibration target
             #
             inner_diameter: 7.0
             # inner_stroke_width: The thickness of the inner circle edge. 
             #
             inner_stroke_width: 1.0
             # inner_fill_color: color to use to fill the inner circle.
             #
             inner_fill_color: [0,0,0]
             # inner_line_color: color to used for the inner circle edge.
             #
             inner_line_color: [0,0,0]
             # The Tobii Calibration routine supports using moving target graphics.
             # The following parameters control target movement (if any).
             #
             animate:
                 # enable: True if the calibration target should be animated.
                 # False specifies that the calibration targets could just jump
                 # from one calibration position to another.
                 #
                 enable: True
                 # expansion_ratio: The outer circle of the calibration target
                 # can expand (and contract) when displayed at each position.
                 # expansion_ratio gives the largest size of the outer circle 
                 # as a ratio of the outer_diameter length. For example,
                 # if outer_diameter = 30, and expansion_ratio = 2.0, then
                 # the outer circle of each calibration point will expand out 
                 # to 60 pixels. Set expansion_ratio to 1.0 for no expansion.
                 # 
                 expansion_ratio: 3.0
                 # contract_only: If the calibration target should expand from
                 # the outer circle initial diameter to the larger diameter
                 # and then contract back to the original diameter, set 
                 # contract_only to False. To only have the outer circle target
                 # go from an expanded state to the smaller size, set this to True.
                 #
                 contract_only: True
                 # ** movement_velocity: Deprecated, please use target_delay instead. **
                 #
                 movement_velocity:
                 # ** expansion_speed: Deprecated, target_duration is now used. **
                 #
                 expansion_speed:

    runtime_settings:
        # The supported sampling rates for Tobii are model dependent. 
        # If the sampling rate specified here is not supported by the model being used,
        # the Tobii device will continue to use it's current sampling rate.
        sampling_rate: 60

        # Tobii supports BINOCULAR tracking mode only.
        track_eyes: BINOCULAR
            
    # manufacturer_name: Used by Builder as the displayed name in the eye tracker selection dropdown.
    #
    manufacturer_name: Tobii Technology
    
    # Do not change this value.
    auto_report_events: False

    device_number: 0
